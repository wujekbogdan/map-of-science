const tsvChunkedParser=()=>{const e=new TextDecoder("utf-8");let t,s="";return{parseChunk(n){const a=(e.decode(n)+s).split("\n");return t||(t=a[0].split("\t"),a.shift()),s=a.pop(),a.map((e=>{const s=e.split("\t");if(s.length!==t.length)return null;let n={};return t.forEach(((e,t)=>{n[e]=s[t]})),n})).filter((e=>e))}}};onmessage=async({data:e})=>{let t=0;const s=tsvChunkedParser(),n=await fetch(e);if(!n.body)throw Error("ReadableStream not yet supported in this browser.");const a=new Response(new ReadableStream({start(e){const a=n.body.getReader(),r=async()=>{const{done:n,value:o}=await a.read();if(n)return void e.close();const i=s.parseChunk(o);t+=o.byteLength,postMessage({items:i,totalBytes:t}),e.enqueue(o),r()};r()}})),r=await a.text();postMessage({items:[],totalBytes:r.length,finished:!0})};